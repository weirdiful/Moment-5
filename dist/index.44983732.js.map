{"mappings":"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","sources":["src/script.js"],"sourcesContent":["\nfunction openNav() {\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\n}\n\nfunction closeNav() {\n  document.getElementById(\"mySidenav\").style.width = \"0\";\n}\n\n/**\n * Hämta kursdata från API\n * \n * @async\n * @function fetchCourseData\n * @returns {Promise<Object[]>} array av objekt med information om kurser och program\n * @throws {Error} felmeddelande om API anropet misslyckas\n */\n\nasync function fetchCourseData() {\n  try {\n      let response = await fetch('https://studenter.miun.se/~mallar/dt211g/');\n      let data = await response.json();\n      return data;\n  } catch (error) {\n      console.error('Error fetching data:', error);\n  }\n}\n\n/**\n * Skapar ett stapeldiagram med de 6 mest sökta kurserna\n * @function createCoursesChart\n * @param {Object[]} coursesData - array av kurserna \n */\nfunction createCoursesChart(coursesData) {\n  let topCourses = coursesData\n      .filter(item => item.type === \"Kurs\")\n      .sort((a, b) => b.applicantsTotal - a.applicantsTotal)\n      .slice(0, 6);\n\n  let labels = topCourses.map(course => course.name);\n  let applicants = topCourses.map(course => course.applicantsTotal);\n\n  let ctx = document.getElementById('coursesChart').getContext('2d');\n  new Chart(ctx, {\n      type: 'bar',\n      data: {\n          labels: labels,\n          datasets: [{\n              label: 'Antal sökande',\n              data: applicants,\n              backgroundColor: ['#FF8FA3'],\n              borderColor: ['#EA638C'],\n              borderWidth: 2\n          }]\n      },\n      options: {\n          scales: {\n              y: {\n                  beginAtZero: true\n              }\n          }\n      }\n  });\n}\n\n/**\n * Skapar ett cirkeldiagram med de 5 mest sökta programmen\n * @function createProgramChart\n * @param {Object[]} programsData - array av programmen\n */\nfunction createProgramChart(programsData) {\n  let topPrograms = programsData\n      .filter(item => item.type === \"Program\")\n      .sort((a, b) => b.applicantsTotal - a.applicantsTotal)\n      .slice(0, 5);\n\n  let labels = topPrograms.map(program => program.name);\n  let applicants = topPrograms.map(program => program.applicantsTotal);\n\n  let ctx = document.getElementById('programChart').getContext('2d');\n  new Chart(ctx, {\n      type: 'pie',\n      data: {\n          labels: labels,\n          datasets: [{\n              data: applicants,\n              backgroundColor: ['#6050DC', ' #D52DB7', '#FF2E7E', '#FF6B45', '#FFAB05'],\n          }]\n      }\n  });\n}\n\n/**\n * Hämta data och skapa diagram när sidan laddats\n */\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  let data = await fetchCourseData();\n  \n  if (data) {\n      createCoursesChart(data); \n      createProgramChart(data);\n  }\n});\n\n\n\n//KARTA\n\n/**\n * Väntar tills DOM-innehållet laddats innan koden kör\n */\ndocument.addEventListener(\"DOMContentLoaded\", function (){\n\n  //skapar leaflet-karta och sätter koordinaterna till Stockholm\nlet map = L.map('map').setView([59.3327, 18.0656], 13);\n\n//OpenStreetMap-bakgrundskartan\nL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n  attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n}).addTo(map);\n\n//Sökfält och sökknapp\nlet searchBtn = document.getElementById(\"search-btn\");\nlet searchInput = document.getElementById(\"search-input\");\n\n\n/**\n * Lyssnar efter klick på sökknappen för att göra en API-förfrågan till Nominatim\n */\nsearchBtn.addEventListener(\"click\", function () {\n  let query = searchInput.value.trim(); //hämtar inmatning och tar borta eventuella extra mellanslag\n\n  if (query.length > 0) {\n    //Anropar nominatim API för att söka efter plats\n      fetch (`https://nominatim.openstreetmap.org/search?format=json&q=${query}`)\n        .then(response =>  {\n          if (!response.ok) {\n            throw new Error(\"Nätverksfel vid sökning\");\n          }\n          return response.json();      \n     })\n        .then (data => {\n          if (data.length > 0) {\n            let lat = parseFloat(data[0].lat); //Omvandlar longitud och latitud till tal\n            let lon = parseFloat(data[0].lon);\n\n            //Flyttar kartans vy till den sökta platsen\n            map.setView([lat, lon], 13);\n\n            //Skapar markör för plats och lägger till namn som popup\n            L.marker([lat, lon]).addTo(map)\n            .bindPopup(`<b>${data[0].display_name}</b>`)\n            .openPopup();\n          } else {\n             alert(\"Platsen hittades inte. Försök igen.\");\n          }\n                })\n                .catch(error => {\n                    console.error(\"Fel vid sökning:\", error);\n                    alert(\"Ett fel uppstod vid sökning. Kontrollera din internetanslutning.\");\n                });\n        } else {\n            alert(\"Ange en plats att söka efter.\");\n        }\n    });\n\n  });"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}